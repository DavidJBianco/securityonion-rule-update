Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-rule-update (20120726-0ubuntu0securityonion18) precise; urgency=low
 .
   * add so-snorby-fix-sigs script
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-rule-update-20120726.orig/usr/bin/rule-update
+++ securityonion-rule-update-20120726/usr/bin/rule-update
@@ -149,10 +149,10 @@ if [ ! -f $SSH_CONF ]; then
 
 	# Go get rules from Internet.
 	echo "Running PulledPork."
-	/usr/bin/pulledpork.pl -P $PP_OPTIONS -c /etc/nsm/pulledpork/pulledpork.conf |
+	/usr/bin/pulledpork.pl $PP_OPTIONS -c /etc/nsm/pulledpork/pulledpork.conf |
 		grep -v "normalizations disabled because not inline" |grep -v "^$"
 	
-	# If Snorby is enabled, then we need to update Snorby's reference table
+	# If Snorby is enabled, then we need to wipe and update Snorby's sig_reference table
 	source /etc/nsm/securityonion.conf
 	if [ -d /var/lib/mysql/snorby ] && [ "$SNORBY_ENABLED" = "yes" ]; then
 		# Copy template files into place if they don't already exist
@@ -175,11 +175,11 @@ output database: alert, mysql, user=root
 EOF
                 echo
                 if [ ! -f /etc/nsm/barnyard2-snorby/2.1.13-Build-333 ]; then
-                        echo "Deleting Snorby's reference tables"
-                        mysql -uroot -Dsnorby -e "delete from sig_reference; delete from reference;"
+                        echo "Deleting Snorby's sig_reference table"
+                        mysql -uroot -Dsnorby -e "delete from sig_reference;"
                         touch /etc/nsm/barnyard2-snorby/2.1.13-Build-333
                 fi
-                echo "Updating Snorby's reference tables"
+                echo "Updating Snorby's sig_reference table"
 		echo
 		/usr/bin/barnyard2 -c /etc/nsm/barnyard2-snorby/barnyard2.conf
 	fi
@@ -257,7 +257,7 @@ else
 
 		# Process rules local to sensor without starting a separate download.
 		echo "Running PulledPork."		
-		/usr/bin/pulledpork.pl -P -n -c /etc/nsm/pulledpork/pulledpork.conf |
+		/usr/bin/pulledpork.pl -n -c /etc/nsm/pulledpork/pulledpork.conf |
 			grep -v "normalizations disabled because not inline" |grep -v "^$"
 	else
 		#### Default ####
--- /dev/null
+++ securityonion-rule-update-20120726/usr/bin/so-snorby-fix-sigs
@@ -0,0 +1,102 @@
+#!/bin/bash
+
+echo "Please make sure all barnyard2 instances on all sensors are shut down before continuing."
+echo
+echo "You can do this by running the following command on each sensor:"
+echo "sudo nsm_sensor_ps-stop --only-barnyard2"
+echo
+echo "Press Enter to continue, or Ctrl-C to cancel."
+read input
+
+mysql -uroot snorby << SNORBYEND
+
+DROP PROCEDURE fixsigs; 
+delimiter $$ 
+CREATE PROCEDURE fixsigs(IN proc_gid INT,OUT return_val varchar(50)) 
+BEGIN 
+DECLARE GID_COUNT INT; 
+DECLARE GID_SID_MIN INT; 
+DECLARE GID_SID_MAX INT; 
+DECLARE C_SID INT; 
+DECLARE cursorGIDSid CURSOR FOR SELECT MIN(sig_sid),MAX(sig_sid) FROM 
+signature WHERE sig_gid=proc_gid; 
+DECLARE cursorGIDcount CURSOR FOR SELECT COUNT(sig_sid) FROM signature 
+WHERE sig_gid=proc_gid GROUP BY sig_gid; 
+OPEN cursorGIDcount; 
+FETCH cursorGIDcount INTO GID_COUNT; 
+IF GID_COUNT > 1 THEN 
+SET return_val = 'OPERATED'; 
+OPEN cursorGIDSid; 
+FETCH cursorGIDSid INTO GID_SID_MIN,GID_SID_MAX; 
+SET return_val = CONCAT(return_val,' MIN:',GID_SID_MIN,' MAX: ',GID_SID_MAX); 
+
+SET C_SID = GID_SID_MIN; 
+WHILE C_SID <= GID_SID_MAX DO 
+UPDATE event SET signature=(SELECT sig_id FROM signature WHERE 
+sig_gid=proc_gid AND sig_sid=C_SID AND sig_class_id <> 0 and 
+sig_priority <> 0) WHERE signature IN (SELECT sig_id FROM signature 
+WHERE sig_gid=proc_gid AND sig_sid=C_SID AND sig_class_id ='0' and 
+sig_priority='0'); 
+DELETE FROM signature WHERE sig_gid=proc_gid AND sig_sid=C_SID AND 
+sig_class_id='0' AND sig_priority='0'; 
+
+SET C_SID = C_SID + 1; 
+END WHILE; 
+CLOSE cursorGIDSid; 
+
+ELSE 
+SET return_val = 'NOTHING TO DO'; 
+END IF; 
+CLOSE cursorGIDcount; 
+END$$ 
+delimiter ; 
+
+call fixsigs(100,@a); 
+call fixsigs(101,@a); 
+call fixsigs(102,@a); 
+call fixsigs(103,@a); 
+call fixsigs(104,@a); 
+call fixsigs(105,@a); 
+call fixsigs(106,@a); 
+call fixsigs(110,@a); 
+call fixsigs(111,@a); 
+call fixsigs(112,@a); 
+call fixsigs(113,@a); 
+call fixsigs(114,@a); 
+call fixsigs(115,@a); 
+call fixsigs(116,@a); 
+call fixsigs(117,@a); 
+call fixsigs(118,@a); 
+call fixsigs(119,@a); 
+call fixsigs(120,@a); 
+call fixsigs(121,@a); 
+call fixsigs(122,@a); 
+call fixsigs(123,@a); 
+call fixsigs(124,@a); 
+call fixsigs(125,@a); 
+call fixsigs(126,@a); 
+call fixsigs(128,@a); 
+call fixsigs(129,@a); 
+call fixsigs(130,@a); 
+call fixsigs(131,@a); 
+call fixsigs(133,@a); 
+call fixsigs(134,@a); 
+call fixsigs(135,@a); 
+call fixsigs(136,@a); 
+call fixsigs(137,@a); 
+call fixsigs(138,@a); 
+call fixsigs(139,@a); 
+call fixsigs(140,@a); 
+call fixsigs(141,@a); 
+call fixsigs(142,@a); 
+call fixsigs(143,@a); 
+call fixsigs(144,@a); 
+call fixsigs(145,@a); 
+call fixsigs(2,@a); 
+call fixsigs(3,@a);
+
+SNORBYEND
+
+echo
+echo "If there were no errors, you may restart barnyard2 by running the following command on each sensor:"
+echo "sudo nsm_sensor_ps-start --only-barnyard2"
